configfile: "config/config.yml"

include: "rules/common.smk"

rule all:
    localrule: True
    input:
        logs=expand("results/{id}/solver.log",
                    id=get_all_permutation_ids)

rule solve:
    output:
        "results/{id}/solver.log"
    input:
        "config/all_permutations.csv"
    conda:
        get_conda_environment_from_id
    shell:
        """
        conda info > {output}
        """

checkpoint aggregate_permutations:
    output:
        "config/all_permutations.csv"
    input:
        "workflow/envs/fipy_benchmark_petsc.yml"
    run:
        import pandas as pd
        import uuid

        SIZES = [100]

        df = pd.DataFrame(data=SIZES,
                          columns=["size"])

        df["uuid"] = [str(uuid.uuid4()) for item in df.iterrows()]
        df = df.set_index("uuid")

        df.to_csv(output[0])

checkpoint render_conda_template:
    localrule: True
    output:
        "workflow/envs/fipy_benchmark_petsc.yml",
    input:
        template="workflow/envs/benchmark_petsc.yml",
    template_engine:
        "yte"
