from pathlib import Path
import pandas as pd

configfile: "config/config.yml"

include: "rules/common.smk"
include: "rules/aggregate.smk"
include: "rules/clone.smk"
include: "rules/permutations.smk"
include: "rules/logs.smk"
include: "rules/solve.smk"

report: "report/workflow.rst"

simulation_file = Path(config["simulations"])
if simulation_file.exists():
    SIMULATIONS = pd.read_csv(simulation_file).set_index("id", drop=False)
else:
    SIMULATIONS = pd.DataFrame(columns=["fipy_rev", "suite", "id"])

rule all:
    localrule: True
    input:
        "results/total_times.json",
        expand("results/plots/fipy~{rev}/{benchmark}/{plot}.png",
               rev=config["fipy_revs"],
               benchmark=config["benchmarks"],
               plot=["total", "prepare", "solve"])

rule bootstrap:
    input:
        expand("results/fipy~{rev}/suite~{suite}/environment.yml",
               rev=config["fipy_revs"],
               suite=config["suites"])

rule aggregate_all_results:
    output:
        "results/all.json"
    input:
        logs=expand("results/fipy~{rev}/suite~{suite}/{id}/solver.json",
                    rev=SIMULATIONS["fipy_rev"],
                    suite=SIMULATIONS["suite"],
                    id=SIMULATIONS["id"])
    log:
        "logs/aggregate_all_results.log"
    run:
        concat_json(input.logs, output[0], log[0])
